function getLeaderboard(
  performances: Array<any>,
  models: Array<any>,
  start: number,
  end: number
) {
  // 辅助函数：提取 `/` 前的部分并转换为 Float
  const extractAndParseFloat = (value: string): number => {
    const parts = value.split('/');
    return parseFloat(parts[0]);
  };

  return models
    //.filter((model) => model.release_date)
    .map((model) => {
      const { dictionary } = get_pass_at_1(
        performances,
        model.model_name,
        0,
        0
      )
      let output: { [key: string]: any } = {}
      output["Model"] = model.model_name
      //output["Estimated Cutoff For LiveCodeBench"] = "Estimated Cutoff For LiveCodeBench: " + new Date(model.release_date).toLocaleDateString()
      output["Contaminated"] = false 
      Object.keys(dictionary).forEach(key => {
        if (key != "model" && key != "date"){
          output[key] = dictionary[key];
        }
      });
      return output
    })
    .sort((a, b) => extractAndParseFloat(b["Avg"]) - extractAndParseFloat(a["Avg"]))
    .reduce(
      (
        acc: {
          results: Array<typeof model & { Rank: number | null }>
          rank: number
        },
        model
      ) => {
        let rank = null
        rank = acc.rank
        if (acc.results.length > 0 && extractAndParseFloat(model["Avg"]) != extractAndParseFloat(acc.results[acc.results.length - 1]["Avg"])) {
          acc.rank += 1
          rank = acc.rank
        }
        acc.results.push({
          Rank: rank,
          ...model,
        })
        return acc
      },
      { results: [], rank: 1 }
    ).results
}